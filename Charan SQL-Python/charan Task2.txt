
import sqlite3,sys

if len(sys.argv) != 3 :
 print("Usage:",sys.argv[0],"Genre and Rating")
 sys.exit(1)
if len(sys.argv) == 3 :
    if sys.argv[1] !='':
	genreString = sys.argv[1]
        glist = genreString.split('&')
        glist.sort()
        rating = sys.argv[2]
	con = sqlite3.connect('a2.db')
	cur = con.cursor()
	cur.execute('select title || ' ( '|| case when year is null then '' else year|| ', ' end ||case when content_rating is null then '' else content_rating|| ', ' end|| lang ||' )' || ' [' || imdb_score ||', '  ||num_voted_users ||' ]' as Result  from movie m inner join rating r on m.id = r.movie_id inner join genre g on m.id = g.movie_id  WHERE imdb_score >= rating group by title Having group_concat(genre,'&')  = glist order by  imdb_score desc, num_voted_users desc')
    else:
	rating = sys.argv[2]
	con = sqlite3.connect('a2.db')
	cur = con.cursor()
	cur.execute('select title || ' ( '|| case when year is null then '' else year|| ', ' end ||case when content_rating is null then '' else content_rating|| ', ' end|| lang ||' )' || ' [' || imdb_score ||', '  ||num_voted_users ||' ]' as Result  from movie m inner join rating r on m.id = r.movie_id inner join genre g on m.id = g.movie_id  WHERE imdb_score >= rating group by title order by  imdb_score desc, num_voted_users desc')

while True:
 t = cur.fetchone()
 if t == None:
 break
 x = t
 print(x)
con.close()

